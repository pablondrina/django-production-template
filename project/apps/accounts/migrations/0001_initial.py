# Generated by Django 3.2.4 on 2021-07-13 15:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import project.apps.accounts.managers
import project.apps.accounts.models
import project.utils.email_confirmation.models
import project.utils.phone_confirmation.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'Um usuário com este email ou telefone já existe.'}, help_text='Requerido. Informe um número de whatsapp (com DDD) ou um email válido.', max_length=128, unique=True, validators=[project.apps.accounts.models.validate_username], verbose_name='whatsapp (ou email)')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='número de telefone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='endereço de email')),
                ('cpf', models.CharField(blank=True, max_length=16, null=True, verbose_name='CPF')),
                ('first_name', models.CharField(blank=True, help_text='Será usado em mensagens', max_length=32, verbose_name='nome')),
                ('last_name', models.CharField(blank=True, max_length=32, verbose_name='sobrenome')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='ativo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='membro da equipe')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
                'ordering': ('first_name',),
            },
            bases=(project.utils.email_confirmation.models.SimpleEmailConfirmationUserMixin, project.utils.phone_confirmation.models.SimplePhoneConfirmationUserMixin, models.Model),
            managers=[
                ('objects', project.apps.accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='número de telefone')),
                ('key', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='chave de acesso')),
                ('set_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the confirmation key expiration was set', verbose_name='registrado em')),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='First time this phone was confirmed', null=True, verbose_name='confirmado em')),
                ('is_primary', models.BooleanField(default=True, verbose_name='principal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_number_set', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Telefone',
                'verbose_name_plural': 'Telefones',
                'abstract': False,
                'swappable': 'SIMPLE_PHONE_CONFIRMATION_PHONE_NUMBER_MODEL',
                'unique_together': {('user', 'phone')},
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, verbose_name='email')),
                ('key', models.CharField(max_length=50, unique=True, verbose_name='chave de acesso')),
                ('set_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the confirmation key expiration was set', verbose_name='registrado em')),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='First time this email was confirmed', null=True, verbose_name='confirmado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_address_set', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'abstract': False,
                'swappable': 'SIMPLE_EMAIL_CONFIRMATION_EMAIL_ADDRESS_MODEL',
                'unique_together': {('user', 'email')},
            },
        ),
    ]
